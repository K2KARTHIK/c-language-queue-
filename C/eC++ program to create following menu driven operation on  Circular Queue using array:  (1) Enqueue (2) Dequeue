#include <stdio.h>
int queue[100];
int front = -1;
int rear = -1;

void enqueue() 
{
    int data;
    if ((front == 0 && rear == 99) || (front == rear + 1)) 
    {
        printf("Queue is full");
    }
    else 
    {
        printf("Enter data to enqueue\n");
        scanf("%d", &data);
        if (front == -1) 
        {
            front = 0;
            rear = 0;
        }
        else if (rear ==99) 
        {
            rear = 0;
        }
        else 
        {
            rear++;
        }
        queue[rear] = data;
        printf("%d was enqueued to the queue.\n", data);
    }
}

void dequeue() 
{
    if (front == rear == -1) 
    {
        printf("Queue is empty\n");
    }
    else 
    {
        printf("%d was dequeued from the queue\n", queue[front]);
        if (front == rear) 
        {
            front = -1;
            rear = -1;
        }
        else if (front == 99) 
        {
            front = 0;
        }
        else 
        {
            front++;
        }
    }
}

void display() 
{
    if (front == -1) 
    {
        printf("Queue is empty\n");
    }
    else 
    {
        printf("Queue elements are: \n");
        if (rear >= front) 
        {
            for (int i = front; i <= rear; i++) 
            {
                printf("%d ", queue[i]);
            }
        }
        else 
        {
            for (int i = front; i < 99; i++) 
            {
                printf("%d ", queue[i]);
            }
            for (int i = 0; i <= rear; i++) 
            {
                printf("%d ", queue[i]);
            }
        }
        printf("\n");
    }
}

int main() 
{
    int choice;

    while (1) 
    {
        printf("Enter 1 to enqueue\nEnter 2 to dequeue\nEnter 3 to display\n");
        scanf("%d", &choice);

        switch (choice) 
        {
            case 1:
                enqueue();
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;          
            default:
                printf("invalid\n");
                break;
        }
    }

  return 0;
}
